Here is an example of a React Native component that uses the react-native-fingerprint-scanner library to implement fingerprint authentication:

Copy code
import React, { useState } from 'react';
import FingerprintScanner from 'react-native-fingerprint-scanner';
import { View, Text } from 'react-native';

const FingerprintAuth = () => {
  const [errorMessage, setErrorMessage] = useState('');

  const handleFingerprintShown = () => {
    FingerprintScanner
      .authenticate({ description: 'Scan your fingerprint on the device scanner to continue' })
      .then(() => {
        console.log('Authenticated successfully');
      })
      .catch((error) => {
        setErrorMessage(error.message);
      });
  }

  return (
    <View>
      <Text onPress={handleFingerprintShown}>
        Fingerprint Auth
      </Text>
      {errorMessage && (
        <Text>
          {errorMessage}
        </Text>
      )}
    </View>
  );
};

export default FingerprintAuth;
In this example, the handleFingerprintShown function is called when the user clicks on the "Fingerprint Auth" text. This function uses the authenticate method from the react-native-fingerprint-scanner library to prompt the user to scan their fingerprint. If the fingerprint scan is successful, the then callback is invoked, and the user is authenticated. If the fingerprint scan fails, the catch callback is invoked, and an error message is displayed to the user.

Note that you must first install the react-native-fingerprint-scanner package and link it to your project before you can use it in your code.